sudo: required
language: java
jdk:
  - openjdk8
env:
  global:
    - IMAGE_NAME=bluecompute-inventory
    - RELEASE_NAME=inventory
    - TAG=travis-latest
    - SERVICE_PORT=8080
    - MANAGEMENT_PORT=8090
stages:
  #- local build and test
  #- docker build, deploy, and test
  - kubernetes build, deploy, and test
jobs:
  include:
    - stage: kubernetes build, deploy, and test
      services:
      - docker
      env:
      - CHANGE_MINIKUBE_NONE_USER=true
      - CHART_NAME=inventory
      - MYSQL_ROOT_PASSWORD=admin123
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=inventorydb
      install:
        - true
      before_script:
      # Testing
      ls -la /home/travis
      ls -la /home/travis/.docker
      # Install nsenter, which is needed for minikube to work
      - bash scripts/install_minikube_and_helm.sh
      # Install MySQL
      - helm upgrade --install mysql --version 0.10.2 --set fullnameOverride=${RELEASE_NAME}-mysql,mysqlRootPassword=${MYSQL_ROOT_PASSWORD},mysqlUser=${MYSQL_USER},mysqlPassword=${MYSQL_PASSWORD},mysqlDatabase=${MYSQL_DATABASE},persistence.enabled=false stable/mysql
      # Wait for MySQL to start
      - kubectl rollout status deployment/${RELEASE_NAME}-mysql
      script:
      # Build Docker image
      - docker build -t "${IMAGE_NAME}:${TAG}" .
      # helm lint
      - helm lint chart/${CHART_NAME}
      # helm package
      - helm package chart/${CHART_NAME}
      # helm install from packaged chart. Use pullPolicy=Never so it uses local docker image
      - CHART_VERSION="$(cat chart/${CHART_NAME}/Chart.yaml | grep version | awk '{print $2}')"
      - helm upgrade --install ${RELEASE_NAME} --set image.repository="${IMAGE_NAME}",image.tag="${TAG}",image.pullPolicy=Never,mysql.existingSecret=${RELEASE_NAME}-mysql ${CHART_NAME}-${CHART_VERSION}.tgz
      # Get Deployment Name
      - DEPLOYMENT="deployment/${RELEASE_NAME}-${CHART_NAME}"
      # Wait for deployment to be ready
      - kubectl rollout status ${DEPLOYMENT}
      # Get logs
      - kubectl logs -f ${DEPLOYMENT} &
      # Port Forwarding
      - kubectl port-forward ${DEPLOYMENT} ${SERVICE_PORT} ${MANAGEMENT_PORT} &
      - echo "Sleeping for 3 seconds while connection is established..."
      - sleep 3
      # Let the application start
      - bash scripts/health_check.sh
      # Run API Test
      - bash scripts/api_tests.sh